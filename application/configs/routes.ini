[production]
; IndexController

; UserController
routes.reset-password.route = "resetpwd"
routes.reset-password.defaults.controller = "user"
routes.reset-password.defaults.action = "reset-password"

routes.not-found.route = "404"
routes.not-found.defaults.controller = "handle"
routes.not-found.defaults.action = "not-found"

routes.error.route = "500"
routes.error.defaults.controller = "handle"
routes.error.defaults.action = "error"

routes.forbidden.route = "403"
routes.forbidden.defaults.controller = "handle"
routes.forbidden.defaults.action = "forbidden"


[staging : production]


[testing : production]


[development : production]


[yingxi : production]
routes.home.route = "/"
routes.home.defaults.controller = "show"
routes.home.defaults.action = "play"

; Dev version
routes.manage-index.route = "/manage"
routes.manage-index.defaults.controller = "manage"
routes.manage-index.defaults.action = "index"

routes.manage-program-list-home.route = "/manage/program/list"
routes.manage-program-list-home.defaults.controller = "manage"
routes.manage-program-list-home.defaults.action = "program-list"

routes.manage-program-list.route = "/manage/program/list/:page"
routes.manage-program-list.defaults.controller = "manage"
routes.manage-program-list.defaults.action = "program-list"

routes.manage-program-create.route = "/manage/program/create"
routes.manage-program-create.defaults.controller = "manage"
routes.manage-program-create.defaults.action = "program-create"

routes.manage-program-save.route = "/manage/program/save"
routes.manage-program-save.defaults.controller = "manage"
routes.manage-program-save.defaults.action = "program-save"

routes.manage-program-remove.route = "/manage/program/remove"
routes.manage-program-remove.defaults.controller = "manage"
routes.manage-program-remove.defaults.action = "program-remove"

routes.manage-oss-list-home.route = "/manage/oss/list"
routes.manage-oss-list-home.defaults.controller = "manage"
routes.manage-oss-list-home.defaults.action = "oss-list"

routes.manage-oss-list.route = "/manage/oss/list/:page"
routes.manage-oss-list.defaults.controller = "manage"
routes.manage-oss-list.defaults.action = "oss-list"

routes.manage-oss-create.route = "/manage/oss/create"
routes.manage-oss-create.defaults.controller = "manage"
routes.manage-oss-create.defaults.action = "oss-create"

routes.manage-oss-save.route = "/manage/oss/save/:id"
routes.manage-oss-save.defaults.controller = "manage"
routes.manage-oss-save.defaults.action = "oss-save"

routes.manage-oss-remove.route = "/manage/oss/remove"
routes.manage-oss-remove.defaults.controller = "manage"
routes.manage-oss-remove.defaults.action = "oss-remove"

routes.manage-phototype-list.route = "/manage/phototype/list/:page"
routes.manage-phototype-list.defaults.controller = "manage"
routes.manage-phototype-list.defaults.action = "phototype-list"

routes.manage-phototype-list-home.route = "/manage/phototype/list"
routes.manage-phototype-list-home.defaults.controller = "manage"
routes.manage-phototype-list-home.defaults.action = "phototype-list"

routes.manage-phototype-remove.route = "/manage/phototype/remove"
routes.manage-phototype-remove.defaults.controller = "manage"
routes.manage-phototype-remove.defaults.action = "phototype-remove"

routes.manage-phototype-create.route = "/manage/phototype/create"
routes.manage-phototype-create.defaults.controller = "manage"
routes.manage-phototype-create.defaults.action = "phototype-create"

routes.manage-phototype-save.route = "/manage/phototype/save/:id"
routes.manage-phototype-save.defaults.controller = "manage"
routes.manage-phototype-save.defaults.action = "phototype-save"

routes.manage-photo-upload.route = "/manage/photo/upload"
routes.manage-photo-upload.defaults.controller = "manage"
routes.manage-photo-upload.defaults.action = "photo-upload"


routes.manage-photo-create.route = "/manage/photo/create"
routes.manage-photo-create.defaults.controller = "manage"
routes.manage-photo-create.defaults.action = "photo-create"

routes.manage-photo-save.route = "/manage/photo/save/:id"
routes.manage-photo-save.defaults.controller = "manage"
routes.manage-photo-save.defaults.action = "photo-save"

routes.manage-photo-list-home.route = "/manage/photo/list"
routes.manage-photo-list-home.defaults.controller = "manage"
routes.manage-photo-list-home.defaults.action = "photo-list"

routes.manage-photo-list.route = "/manage/photo/list/:page"
routes.manage-photo-list.defaults.controller = "manage"
routes.manage-photo-list.defaults.action = "photo-list"

; fake router for public/photo/image/:image
routes.manage-photo-image.route = "/photo/image/:image"
routes.manage-photo-image.defaults.controller = "photo"
routes.manage-photo-image.defaults.action = "image"

routes.manage-photo-clear-cache.route = "/manage/photo/clearcache"
routes.manage-photo-clear-cache.defaults.controller = "manage"
routes.manage-photo-clear-cache.defaults.action = "photo-clearcache"

routes.manage-login.route = "/manage/login"
routes.manage-login.defaults.controller = "manage"
routes.manage-login.defaults.action = "login"

routes.manage-logout.route = "/manage/logout"
routes.manage-logout.defaults.controller = "manage"
routes.manage-logout.defaults.action = "logout"

routes.manage-register.route = "/manage/register"
routes.manage-register.defaults.controller = "manage"
routes.manage-register.defaults.action = "register"

routes.manage-photo-remove.route = "/manage/photo/remove"
routes.manage-photo-remove.defaults.controller = "manage"
routes.manage-photo-remove.defaults.action = "photo-remove"

routes.manage-result.route = "/manage/result"
routes.manage-result.defaults.controller = "manage"
routes.manage-result.defaults.action = "result"

routes.manage-author-list.route = "/manage/author/list/:page"
routes.manage-author-list.defaults.controller = "manage"
routes.manage-author-list.defaults.action = "author-list"

routes.manage-author-list-home.route = "/manage/author/list"
routes.manage-author-list-home.defaults.controller = "manage"
routes.manage-author-list-home.defaults.action = "author-list"

routes.manage-author-remove.route = "/manage/author/remove"
routes.manage-author-remove.defaults.controller = "manage"
routes.manage-author-remove.defaults.action = "author-remove"

routes.manage-author-create.route = "/manage/author/create"
routes.manage-author-create.defaults.controller = "manage"
routes.manage-author-create.defaults.action = "author-create"

routes.manage-author-save.route = "/manage/author/save/:id"
routes.manage-author-save.defaults.controller = "manage"
routes.manage-author-save.defaults.action = "author-save"

routes.manage-category-list.route = "/manage/category/list/:page"
routes.manage-category-list.defaults.controller = "manage"
routes.manage-category-list.defaults.action = "category-list"

routes.manage-category-list-home.route = "/manage/category/list"
routes.manage-category-list-home.defaults.controller = "manage"
routes.manage-category-list-home.defaults.action = "category-list"

routes.manage-category-remove.route = "/manage/category/remove"
routes.manage-category-remove.defaults.controller = "manage"
routes.manage-category-remove.defaults.action = "category-remove"

routes.manage-category-create.route = "/manage/category/create"
routes.manage-category-create.defaults.controller = "manage"
routes.manage-category-create.defaults.action = "category-create"

routes.manage-category-save.route = "/manage/category/save/:id"
routes.manage-category-save.defaults.controller = "manage"
routes.manage-category-save.defaults.action = "category-save"

;routes.show-detail.route = "/show/:id"
;routes.show-detail.defaults.controller = "show"
;routes.show-detail.defaults.action = "detail"

routes.show-play.route = "/play"
routes.show-play.defaults.controller = "show"
routes.show-play.defaults.action = "play"

routes.show-play-special.route = "/play/:special"
routes.show-play-special.defaults.controller = "show"
routes.show-play-special.defaults.action = "play"

routes.show-play-program.route = "/play/:special/:program"
routes.show-play-program.defaults.controller = "show"
routes.show-play-program.defaults.action = "play"

routes.api-get-special-link.route = "/api/get/link"
routes.api-get-special-link.defaults.controller = "show"
routes.api-get-special-link.defaults.action = "get-link"

routes.login.route = "login"
routes.login.defaults.controller = "index"
routes.login.defaults.action = "login"

routes.upgrade.route = "upgrade"
routes.upgrade.defaults.controller = "index"
routes.upgrade.defaults.action = "upgrade"

routes.register.route = "register"
routes.register.defaults.controller = "index"
routes.register.defaults.action = "register"

routes.logout.route = "logout"
routes.logout.defaults.controller = "index"
routes.logout.defaults.action = "logout"

routes.about.route = "about"
routes.about.defaults.controller = "index"
routes.about.defaults.action = "about"

;routes.is-email-exist.route = "isemailexist"
;routes.is-email-exist.defaults.controller = "index"
;routes.is-email-exist.defaults.action = "is-email-exist"

routes.is-email-can-be-used.route = "isemailcanbeused"
routes.is-email-can-be-used.defaults.controller = "index"
routes.is-email-can-be-used.defaults.action = "is-email-can-be-used"

routes.forgot-password.route = "forgotpwd"
routes.forgot-password.defaults.controller = "index"
routes.forgot-password.defaults.action = "forgot-password"

routes.reset-password.route = "resetpwd"
routes.reset-password.defaults.controller = "user"
routes.reset-password.defaults.action = "reset-password"

routes.hobby.route = "hobby"
routes.hobby.defaults.controller = "user"
routes.hobby.defaults.action = "hobby"

routes.manage-keyword-list-home.route = "/manage/keyword/list"
routes.manage-keyword-list-home.defaults.controller = "manage"
routes.manage-keyword-list-home.defaults.action = "keyword-list"

routes.manage-keyword-list.route = "/manage/keyword/list/:page"
routes.manage-keyword-list.defaults.controller = "manage"
routes.manage-keyword-list.defaults.action = "keyword-list"

routes.manage-keyword-create.route = "/manage/keyword/create"
routes.manage-keyword-create.defaults.controller = "manage"
routes.manage-keyword-create.defaults.action = "keyword-create"

routes.manage-keyword-save.route = "/manage/keyword/save/:id"
routes.manage-keyword-save.defaults.controller = "manage"
routes.manage-keyword-save.defaults.action = "keyword-save"

; you must revise it ...
routes.manage-keyword-remove.route = "/manage/keyword/remove"
routes.manage-keyword-remove.defaults.controller = "manage"
routes.manage-keyword-remove.defaults.action = "keyword-remove"

;-------------------------------------

routes.manage-special-list-home.route = "/manage/special/list"
routes.manage-special-list-home.defaults.controller = "manage"
routes.manage-special-list-home.defaults.action = "special-list"

routes.manage-special-list.route = "/manage/special/list/:page"
routes.manage-special-list.defaults.controller = "manage"
routes.manage-special-list.defaults.action = "special-list"

routes.manage-special-create.route = "/manage/special/create"
routes.manage-special-create.defaults.controller = "manage"
routes.manage-special-create.defaults.action = "special-create"

routes.manage-special-save.route = "/manage/special/save/:id"
routes.manage-special-save.defaults.controller = "manage"

routes.manage-special-save.defaults.action = "special-save"

; you must revise it ...
routes.manage-special-remove.route = "/manage/special/remove"
routes.manage-special-remove.defaults.controller = "manage"
routes.manage-special-remove.defaults.action = "special-remove"

routes.api-special-recommend.route = "/api/recommend/get"
routes.api-special-recommend.defaults.controller = "show"
routes.api-special-recommend.defaults.action = "special-recommend"

routes.api-device-install.route = "/api/device/install/:name"
routes.api-device-install.defaults.controller = "index"
routes.api-device-install.defaults.action = "device"

routes.api-device-count.route = "/api/device/count/:name"
routes.api-device-count.defaults.controller = "index"
routes.api-device-count.defaults.action = "device-count"

routes.manage-version-create.route = "/manage/version/create"
routes.manage-version-create.defaults.controller = "manage"
routes.manage-version-create.defaults.action = "version-create"

routes.manage-version-save.route = "/manage/version/save/:id"
routes.manage-version-save.defaults.controller = "manage"
routes.manage-version-save.defaults.action = "version-save"

routes.manage-version-list.route = "/manage/version/list/:page"
routes.manage-version-list.defaults.controller = "manage"
routes.manage-version-list.defaults.action = "version-list"

routes.manage-version-list-home.route = "/manage/version/list"
routes.manage-version-list-home.defaults.controller = "manage"
routes.manage-version-list-home.defaults.action = "version-list"

routes.manage-version-remove.route = "/manage/version/remove"
routes.manage-version-remove.defaults.controller = "manage"
routes.manage-version-remove.defaults.action = "version-remove"

routes.api-version-get.route = "/api/version/get/:sys"
routes.api-version-get.defaults.controller = "index"
routes.api-version-get.defaults.action = "version-get"

routes.manage-hot-list.route = "/manage/hot/list/:page"
routes.manage-hot-list.defaults.controller = "manage"
routes.manage-hot-list.defaults.action = "hot-list"

routes.manage-hot-list-home.route = "/manage/hot/list"
routes.manage-hot-list-home.defaults.controller = "manage"
routes.manage-hot-list-home.defaults.action = "hot-list"

routes.manage-hot-save.route = "/manage/hot/save/:id"
routes.manage-hot-save.defaults.controller = "manage"
routes.manage-hot-save.defaults.action = "hot-save"

routes.manage-oss-preview.route = "/manage/oss/preview/:video"
routes.manage-oss-preview.defaults.controller = "manage"
routes.manage-oss-preview.defaults.action = "oss-preview"

routes.manage-oss-test.route = "/manage/oss/test/:video"
routes.manage-oss-test.defaults.controller = "manage"
routes.manage-oss-test.defaults.action = "oss-test"

routes.user-player-mode.route = "/user/playermode"
routes.user-player-mode.defaults.controller = "user"
routes.user-player-mode.defaults.action = "player-mode"

routes.api-user-category-save.route = "/api/user/category"
routes.api-user-category-save.defaults.controller = "show"
routes.api-user-category-save.defaults.action = "save-user-category"

routes.api-user-category-list.route = "/api/user/categorylist"
routes.api-user-category-list.defaults.controller = "show"
routes.api-user-category-list.defaults.action = "user-category-list"

routes.api-user-category-remove.route = "/api/user/remove"
routes.api-user-category-remove.defaults.controller = "show"
routes.api-user-category-remove.defaults.action = "remove-user-category"

routes.api-category-list.route = "/api/category/list"
routes.api-category-list.defaults.controller = "show"
routes.api-category-list.defaults.action = "category-list"

routes.api-keyword-vote.route = "/api/keyword/vote"
routes.api-keyword-vote.defaults.controller = "show"
routes.api-keyword-vote.defaults.action = "keyword-vote"

routes.download-android.route = "/download/android/:version"
routes.download-android.defaults.controller = "show"
routes.download-android.defaults.action = "download-android"

routes.download-ios.route = "/download/ios/:version"
routes.download-ios.defaults.controller = "show"
routes.download-ios.defaults.action = "download-ios"

routes.api-favourite-add.route = "/api/favourite/add"
routes.api-favourite-add.defaults.controller = "show"
routes.api-favourite-add.defaults.action = "favourite-add"

routes.api-favourite-remove.route = "/api/favourite/remove"
routes.api-favourite-remove.defaults.controller = "show"
routes.api-favourite-remove.defaults.action = "favourite-remove"

routes.api-favourite-list.route = "/api/favourite/list"
routes.api-favourite-list.defaults.controller = "show"
routes.api-favourite-list.defaults.action = "favourite-list"

routes.api-favourite-is.route = "/api/favourite/is"
routes.api-favourite-is.defaults.controller = "show"
routes.api-favourite-is.defaults.action = "is-user-favourite"


routes.upload-file.route = "/upload/file/:filename/:size/:key/:type/:ext"
routes.upload-file.defaults.controller = "show"
routes.upload-file.defaults.action = "upload-file"

routes.manage-api-test.route = "/manage/api/test"
routes.manage-api-test.defaults.controller = "manage"
routes.manage-api-test.defaults.action = "api-test"

routes.manage-upload-test.route = "/manage/upload/test"
routes.manage-upload-test.defaults.controller = "show"
routes.manage-upload-test.defaults.action = "upload-test"

routes.manage-vip-create.route = "/manage/vip/create"
routes.manage-vip-create.defaults.controller = "manage"
routes.manage-vip-create.defaults.action = "vip-create"

routes.manage-vip-list-home.route = "/manage/vip/list"
routes.manage-vip-list-home.defaults.controller = "manage"
routes.manage-vip-list-home.defaults.action = "vip-list"

routes.manage-vip-list.route = "/manage/vip/list/:page"
routes.manage-vip-list.defaults.controller = "manage"
routes.manage-vip-list.defaults.action = "vip-list"

;----------vip list bugs  handle--------------------------
routes.manage-vip-bugs-list-home.route = "/manage/vipbugs/list"
routes.manage-vip-bugs-list-home.defaults.controller = "manage"
routes.manage-vip-bugs-list-home.defaults.action = "vipbugs-list"

routes.manage-vip-fix.route = "/manage/vip/fix"
routes.manage-vip-fix.defaults.controller = "manage"
routes.manage-vip-fix.defaults.action = "vip-fix"

;-------------------------------------------------------------------------------------

routes.manage-vip-save.route = "/manage/vip/save/:id"
routes.manage-vip-save.defaults.controller = "manage"
routes.manage-vip-save.defaults.action = "vip-save"

routes.manage-vip-set.route = "/manage/vip/set"
routes.manage-vip-set.defaults.controller = "manage"
routes.manage-vip-set.defaults.action = "set-vip"

routes.manage-vip-unset.route = "/manage/vip/unset"
routes.manage-vip-unset.defaults.controller = "manage"
routes.manage-vip-unset.defaults.action = "unset-vip"

routes.phone-register.route = "/phone/register"
routes.phone-register.defaults.controller = "index"
routes.phone-register.defaults.action = "phone-register"

routes.phone-login.route = "/phone/login"
routes.phone-login.defaults.controller = "index"
routes.phone-login.defaults.action = "phone-login"

routes.api-special-program-list.route = "/api/special/program/list"
routes.api-special-program-list.defaults.controller = "show"
routes.api-special-program-list.defaults.action = "special-program-list"

routes.api-search.route = "/api/search/:q"
routes.api-search.defaults.controller = "show"
routes.api-search.defaults.action = "search"

; Same action as last route, just for frontend js search format '/search?q=xxx'
routes.api-search-home.route = "/api/search"
routes.api-search-home.defaults.controller = "show"
routes.api-search-home.defaults.action = "search"

routes.api-sharing.route = "/api/sharing"
routes.api-sharing.defaults.controller = "handle"
routes.api-sharing.defaults.action = "sharing"

routes.api-program-add-count.route = "/api/program/add/count"
routes.api-program-add-count.defaults.controller = "show"
routes.api-program-add-count.defaults.action = "program-add-count"

routes.api-comments-add.route = "/api/comments/add"
routes.api-comments-add.defaults.controller = "show"
routes.api-comments-add.defaults.action = "comments-add"

routes.api-comments-image-add.route = "/api/comments/image"
routes.api-comments-image-add.defaults.controller = "show"
routes.api-comments-image-add.defaults.action = "comments-image"

routes.api-comments-hot-get.route = "/api/comments/hot/get/:pid"
routes.api-comments-hot-get.defaults.controller = "show"
routes.api-comments-hot-get.defaults.action = "comments-get"

routes.api-comments-hot-up.route = "/api/comments/up"
routes.api-comments-hot-up.defaults.controller = "show"
routes.api-comments-hot-up.defaults.action = "comments-up"

routes.manage-comments-list.route = "/manage/comments/list/:pid"
routes.manage-comments-list.defaults.controller = "manage"
routes.manage-comments-list.defaults.action = "comments-list"

routes.manage-comments-list-home.route = "/manage/comments/list/:pid/:page"
routes.manage-comments-list-home.defaults.controller = "manage"
routes.manage-comments-list-home.defaults.action = "comments-list"

routes.manage-comments-unset-hot.route = "/manage/comments/hot/unset"
routes.manage-comments-unset-hot.defaults.controller = "manage"
routes.manage-comments-unset-hot.defaults.action = "comments-unset"

routes.manage-comments-set-hot.route = "/manage/comments/hot/set"
routes.manage-comments-set-hot.defaults.controller = "manage"
routes.manage-comments-set-hot.defaults.action = "comments-set"

routes.manage-comments-remove.route = "/manage/comments/remove"
routes.manage-comments-remove.defaults.controller = "manage"
routes.manage-comments-remove.defaults.action = "comments-remove"

routes.manage-user-mobile.route = "/manage/user/mobile/count"
routes.manage-user-mobile.defaults.controller = "manage"
routes.manage-user-mobile.defaults.action = "mobile-count"

[usserver : production]
